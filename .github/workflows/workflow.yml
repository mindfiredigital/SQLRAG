name: Upload Python Package

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  actions: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout master branch
      uses: actions/checkout@v4
      with:
        ref: main
        fetch-depth: 0
        tags: true

    - name: Create and push to master
      run: |
        git checkout -b master
        git push origin master

    - name: Checkout release branch
      run: git checkout master

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine python-semantic-release setuptools-scm

    - name: Run semantic-release and determine version
      id: semantic_version
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Fetch all tags to ensure they're up-to-date
        git fetch --tags

        git config user.name github-actions
        git config user.email github-actions@github.com

        # Run semantic-release to determine the version
        semantic-release version

        # Extract the version from the latest tag or fallback to commit hash
        VERSION=$(git describe --tags --abbrev=0 2>/dev/null || git describe --always)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

        # Push tags to the repository
        git push --follow-tags origin master || git push --set-upstream origin master

    - name: 'Copy Docusaurus build artifacts to gh-pages branch'
      run: |
        # Create a temp directory to store the build files
        mkdir -p /tmp/temp-directory
        # Enable dotglob to copy hidden files (like .gitignore)
        shopt -s dotglob
        # Copy the build from the docs-docusaurus/build folder
        cp -r site/* /tmp/temp-directory/
        shopt -u dotglob

        # Check if the gh-pages branch exists and create it if it doesn't
        if git show-ref --quiet refs/heads/gh-pages; then
          echo "gh-pages branch exists. Checking it out."
          git checkout gh-pages
        else
          echo "gh-pages branch does not exist. Creating it."
          git checkout --orphan gh-pages
          git rm -rf .
        fi
        # Remove all files from the gh-pages branch
        rm -rf *
        # Copy the page data from the temp directory
        cp -r /tmp/temp-directory/* .
        # Check if there are any changes before committing
        if [[ -n "$(git status --porcelain)" ]]; then
          git add . -f
          git commit -m "chore: Copy MKDocs build page data to gh-pages branch"
        else
          echo "No changes to commit"
        fi

    - name: Push to gh-pages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git push origin gh-pages || echo "No changes to push"

    - name: 'Switch back to docs branch'
      run: |
        git checkout main

    - name: Build package
      run: python -m build

    - name: Publish package to PyPI
      env:
        TWINE_USERNAME: _token_
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload dist/*

    # - name: Raise PR from master to main
    #   uses: peter-evans/create-pull-request@v5
    #   with:
    #     base: main
    #     head: master
    #     title: 'Release PR: master -> main'
    #     body: 'This PR merges the changes from the master branch back into main after the release.'
    #     branch: pr-master-to-main

    # - name: 'Switch back to docs branch'
    #   run: |
    #     git checkout main
